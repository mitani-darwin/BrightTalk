<div class="row justify-content-center">
  <div class="col-md-6 col-lg-4">
    <div class="card">
      <div class="card-header">
        <h3 class="card-title text-center mb-0">
          <i class="fas fa-fingerprint me-2"></i>ログイン
        </h3>
      </div>
      <div class="card-body">
        <!-- エラーメッセージの表示 -->
        <% if resource.errors.any? %>
          <div class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>エラーが発生しました</strong>
            <ul class="mb-0 mt-2">
              <% resource.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>

        <!-- メールアドレス入力 -->
        <div class="mb-3">
          <label for="email" class="form-label">メールアドレス</label>
          <input type="email" id="email" class="form-control" required autofocus autocomplete="email">
          <div class="invalid-feedback">
            メールアドレスを入力してください
          </div>
        </div>
        
        <!-- パスキー認証ボタン -->
        <div class="d-grid gap-2 mb-4">
          <button type="button" id="passkey-login-btn" class="btn btn-primary btn-lg">
            <i class="fas fa-fingerprint me-2"></i>パスキーでログイン
          </button>
        </div>
        
        <!-- ステータス表示 -->
        <div id="status-message" class="alert" style="display: none;" role="alert"></div>
      </div>
    </div>
  </div>
</div>

<!-- パスキー認証用JavaScript -->
<%= javascript_import_module_tag "passkey" %>
<script>
(function() {
  function setupPasskeyLogin() {
    const emailInput = document.getElementById('email');
    const passkeyLoginBtn = document.getElementById('passkey-login-btn');
    const statusMessage = document.getElementById('status-message');
    if (!emailInput || !passkeyLoginBtn || !statusMessage) return;

    function showStatus(message, type = 'info') {
      statusMessage.textContent = message;
      statusMessage.className = `alert alert-${type}`;
      statusMessage.style.display = 'block';
      if (type === 'success') {
        setTimeout(() => { statusMessage.style.display = 'none'; }, 3000);
      }
    }

    async function performPasskeyAuth() {
      const email = emailInput.value.trim();
      if (!email) { showStatus('メールアドレスを入力してください', 'danger'); return; }
      try {
        showStatus('パスキー認証を開始しています...', 'info');
        passkeyLoginBtn.disabled = true;
        const response = await fetch('/passkey_authentications/auth_options', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({ email })
        });
        if (!response.ok) {
          let msg = '認証オプションの取得に失敗しました';
          try { const err = await response.json(); msg = err.error || msg; } catch(e) {}
          throw new Error(msg);
        }
        const authData = await response.json();
        if (!authData.passkey_options) throw new Error('このメールアドレスにはパスキーが登録されていません');
        await startPasskeyAuthentication(authData.passkey_options);
      } catch (error) {
        console.error('Passkey authentication failed:', error);
        showStatus(`パスキー認証に失敗しました: ${error.message}`, 'danger');
      } finally {
        passkeyLoginBtn.disabled = false;
      }
    }

    // 二重登録防止のため、ボタンをクローンして置き換え
    const btnClone = passkeyLoginBtn.cloneNode(true);
    passkeyLoginBtn.parentNode.replaceChild(btnClone, passkeyLoginBtn);

    btnClone.addEventListener('click', performPasskeyAuth);
    emailInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') { e.preventDefault(); performPasskeyAuth(); }
    });
  }

  // Turbo 遷移対応
  document.addEventListener('turbo:load', setupPasskeyLogin);
  document.addEventListener('turbo:render', setupPasskeyLogin);

  // 非Turboロードにも対応
  if (document.readyState !== 'loading') {
    setupPasskeyLogin();
  } else {
    document.addEventListener('DOMContentLoaded', setupPasskeyLogin);
  }
})();
</script>