<div class="row justify-content-center">
  <div class="col-md-6 col-lg-4">
    <div class="card">
      <div class="card-header">
        <h3 class="card-title text-center mb-0">
          <i class="fas fa-fingerprint me-2"></i>ログイン
        </h3>
      </div>
      <div class="card-body">
        <!-- エラーメッセージの表示 -->
        <% if resource.errors.any? %>
          <div class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>エラーが発生しました</strong>
            <ul class="mb-0 mt-2">
              <% resource.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        <% end %>

        <!-- メールアドレス入力 -->
        <div class="mb-3">
          <label for="email" class="form-label">メールアドレス</label>
          <input type="email" id="email" class="form-control" required autofocus autocomplete="email">
          <div class="invalid-feedback">
            メールアドレスを入力してください
          </div>
        </div>
        
        <!-- パスキー認証ボタン -->
        <div class="d-grid gap-2 mb-4">
          <button type="button" id="passkey-login-btn" class="btn btn-primary btn-lg">
            <i class="fas fa-fingerprint me-2"></i>パスキーでログイン
          </button>
        </div>
        
        <!-- ステータス表示 -->
        <div id="status-message" class="alert" style="display: none;" role="alert"></div>
      </div>
    </div>

    <!-- 新規登録へのリンク -->
    <div class="text-center mt-3">
      <p class="text-muted">
        アカウントをお持ちでない方は
        <%= link_to "新規登録", new_user_registration_path, class: "text-decoration-none" %>
      </p>
    </div>
  </div>
</div>

<!-- パスキー認証用JavaScript -->
<%= javascript_include_tag "passkey" %>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const emailInput = document.getElementById('email');
  const passkeyLoginBtn = document.getElementById('passkey-login-btn');
  const statusMessage = document.getElementById('status-message');

  // ステータスメッセージ表示
  function showStatus(message, type = 'info') {
    statusMessage.textContent = message;
    statusMessage.className = `alert alert-${type}`;
    statusMessage.style.display = 'block';
    
    if (type === 'success') {
      setTimeout(() => {
        statusMessage.style.display = 'none';
      }, 3000);
    }
  }

  // パスキー認証実行
  async function performPasskeyAuth() {
    const email = emailInput.value.trim();
    if (!email) {
      showStatus('メールアドレスを入力してください', 'danger');
      return;
    }

    try {
      showStatus('パスキー認証を開始しています...', 'info');
      passkeyLoginBtn.disabled = true;

      // サーバーからパスキー認証オプションを取得
      const response = await fetch('/passkey_authentications/auth_options', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ email: email })
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || '認証オプションの取得に失敗しました');
      }

      const authData = await response.json();
      
      if (!authData.passkey_options) {
        throw new Error('このメールアドレスにはパスキーが登録されていません');
      }

      // パスキー認証実行
      await startPasskeyAuthentication(authData.passkey_options);

    } catch (error) {
      console.error('Passkey authentication failed:', error);
      showStatus(`パスキー認証に失敗しました: ${error.message}`, 'danger');
    } finally {
      passkeyLoginBtn.disabled = false;
    }
  }

  // イベントリスナー
  passkeyLoginBtn.addEventListener('click', performPasskeyAuth);

  // Enterキーでパスキー認証実行
  emailInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      performPasskeyAuth();
    }
  });
});
</script>